scalar Date
scalar Void

type OrderItem {
  id: ID!
  itemId: String!
  orderId: String!
  quantity: Int!
}

type Order @key(fields: "id") {
  id: ID!
  userId: String!
  address: String!
  orderItems: [OrderItem!]!
  createdAt: Date!
  updatedAt: Date
  deletedAt: Date
}

type Meta {
  count: Int
}

extend type Query {
  findOrderById(id: ID!): Order
}

type Mutation {
  createOrder(userId: String!, address: String!): Void
  addItem(orderId: ID!, itemId: ID!, quantity: Int!): Void
  removeItem(orderId: ID!, itemId: ID!): Void
  updateQuantity(orderId: ID!, itemId: ID!, quantity: Int!): Void
  closeOrder(orderId: ID!): Void
}
